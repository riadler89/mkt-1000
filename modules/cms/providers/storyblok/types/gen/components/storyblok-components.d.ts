// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { StoryblokRichtext, StoryblokMultilink, StoryblokAsset } from '../storyblok.d.ts';
export interface AccordionComponent {
  title?: string;
  content: AccordionItemComponent[];
  component: "AccordionComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface AccordionItemComponent {
  title: string;
  content?: (
    | AccordionComponent
    | ButtonComponent
    | DividerComponent
    | GridComponent
    | ImageComponent
    | LinkComponent
    | RichTextComponent
    | SectionComponent
    | SliderComponent
    | TextComponent
    | VideoComponent
  )[];
  component: "AccordionItemComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface ButtonComponent {
  text: string;
  url: Exclude<StoryblokMultilink, {linktype?: "email"} | {linktype?: "asset"}>;
  style?: "" | "primary" | "secondary" | "outline" | "accent";
  component: "ButtonComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface DividerComponent {
  height: "" | "small" | "medium" | "large";
  showLine?: boolean;
  component: "DividerComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface GridComponent {
  numberOfColumnsDesktop: string;
  numberOfColumnsMobile: string;
  gapColumnDesktop?: "" | "small" | "medium" | "large" | "none";
  gapRowDesktop?: "" | "small" | "medium" | "large" | "none";
  gapColumnMobile?: "" | "small" | "medium" | "large" | "none";
  gapRowMobile?: "" | "small" | "medium" | "large" | "none";
  verticalContentAlignment?: "" | "Top" | "Middle" | "Bottom";
  horizontalContentAlignment?: "" | "Left" | "Center" | "Right";
  columnContent?: (
    | AccordionComponent
    | ButtonComponent
    | DividerComponent
    | GridComponent
    | ImageComponent
    | LinkComponent
    | RichTextComponent
    | SectionComponent
    | SliderComponent
    | TextComponent
    | VideoComponent
  )[];
  component: "GridComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface ImageComponent {
  imageDesktop?: StoryblokAsset;
  imageMobile?: StoryblokAsset;
  altText: string;
  aspectRatioDesktop?: "" | "original" | "1:1" | "16:9" | "4:3";
  aspectRatioMobile?: "" | "original" | "1:1" | "16:9" | "4:3";
  component: "ImageComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface LinkComponent {
  url: Exclude<StoryblokMultilink, {linktype?: "email"} | {linktype?: "asset"}>;
  content?: (ImageComponent | TextComponent)[];
  component: "LinkComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface PageComponent {
  metaTitle?: string;
  metaDescription?: string;
  robots?: "" | "index, follow" | "noindex, nofollow" | "index, nofollow" | "noindex, follow";
  content?: (
    | AccordionComponent
    | ButtonComponent
    | DividerComponent
    | GridComponent
    | ImageComponent
    | LinkComponent
    | RichTextComponent
    | SectionComponent
    | SliderComponent
    | TextComponent
    | VideoComponent
  )[];
  component: "PageComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface ProductListingPageComponent {
  teaserContent?: (ImageComponent | SectionComponent | SliderComponent | TextComponent)[];
  component: "ProductListingPageComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface RichTextComponent {
  content: StoryblokRichtext;
  component: "RichTextComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface SectionComponent {
  backgroundColor?: string;
  backgroundImageDesktop?: StoryblokAsset;
  backgroundImageMobile?: StoryblokAsset;
  padding?: "" | "small" | "medium" | "large" | "none";
  minHeightDesktop?: string;
  minHeightMobile?: string;
  horizontalContentAlignment?: "" | "Left" | "Center" | "Right";
  verticalContentAlignment?: "" | "Top" | "Middle" | "Bottom";
  content?: (
    | AccordionComponent
    | ButtonComponent
    | DividerComponent
    | GridComponent
    | ImageComponent
    | LinkComponent
    | RichTextComponent
    | SectionComponent
    | SliderComponent
    | TextComponent
    | VideoComponent
  )[];
  component: "SectionComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface SliderComponent {
  showNavigationArrows?: boolean;
  showPaginationIndicators?: boolean;
  content?: (
    | AccordionComponent
    | ButtonComponent
    | DividerComponent
    | GridComponent
    | ImageComponent
    | LinkComponent
    | RichTextComponent
    | SectionComponent
    | SliderComponent
    | TextComponent
    | VideoComponent
  )[];
  component: "SliderComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface TextComponent {
  content: string;
  textType?: "" | "p" | "h1" | "h2" | "h3" | "h4";
  component: "TextComponent";
  _uid: string;
  [k: string]: unknown;
}

export interface VideoComponent {
  video: StoryblokAsset;
  previewImageDesktop: StoryblokAsset;
  previewImageMobile?: StoryblokAsset;
  aspectRatio?: "" | "1:1" | "16:9" | "4:3";
  autoplay?: boolean;
  muted?: boolean;
  loop?: boolean;
  showControls?: boolean;
  component: "VideoComponent";
  _uid: string;
  [k: string]: unknown;
}
